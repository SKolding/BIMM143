---
title: "Class6"
author: "Sabrina Koldinger(A16368238)"
date: 01/25/2024
format: pdf
editor: visual
---

## R Functions

Functions are how we get stuff done. We call functions to do everything useful in R.

One cool thing about R is that it makes writing your own functions simpler.

All functions in R have at least least three things:

-   A name (that we pick)
-   One or more input arguments (the input to our function)
-   The body (lines of code that do the work)

```{r}
#| eval: false
funname= function(input1, input2){The body with R code}
```

Silly first function to add two numbers:

```{r}
x=5
y=1
x+y
```

```{r fun}
addme=function(x,y=1){x+y}
```

```{r}
addme(1,1)
```

```{r}
addme(10,)
```

## Todays Lab

### Question 1:

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
mean(student1)
```

```{r}
mean(student1)
mean(student2, na.rm=TRUE)
mean(student3, na.rm=TRUE)
```

```{r}
min(student1)
which.min(student1)
```

Found `which.min()` from min. It is the 8th value in the vector

```{r}
#Find lowest score
student1[which.min(student1)]
#Exclude lowest score
student1[-which.min(student1)]
```

Put all the parts together

```{r}
mean(student1[-which.min(student1)])
```

Use a common shortcut and use 'x' as my input

```{r}
x=student1
mean(x[-which.min(x)])
```

Could replace NA values with 0.

```{r}
y= c(1, 2, NA, 4, 5)
y==NA
is.na(y)
```

how do I remove the NA element from the vector

```{r}
!c(F,F,F)
```

```{r}
y[is.na(y)]
y[!is.na(y)]
```

actually make NA 0

```{r}
y[is.na(y)]=0
```

Puting this together

```{r}
x=student2
#Change NA to 0
x[is.na(x)]=0
#Find and remove min value and get mean
mean(x[-which.min(x)])
```

```{r}
x=student1
#Change NA to 0
x[is.na(x)]=0
#Find and remove min value and get mean
mean(x[-which.min(x)])
```

Last step now that I have my woking code snippet is to make my `grade()` function.

```{r}
grade= function(x){x[is.na(x)]=0
    mean(x[-which.min(x)])}
```

```{r}
grade(student1)
grade(student2)
grade(student3)
```

Now read gradebook file

```{r}
url= "https://tinyurl.com/gradeinput"
gradebook= read.csv(url, row.names = 1)

head(gradebook)
```

```{r}
mean_grades=apply(gradebook, 1 ,grade)
mean_grades
```

### Question 2:

```{r}
max(mean_grades)
which.max(mean_grades)
```

Student 18 has the highest grade.

### Question 3:

```{r}
overall_grades_for_assignment=apply(gradebook, 2 , mean, na.rm=T)
which.min(overall_grades_for_assignment)
```

Homework 3 is the most difficult.

### Question 4:which homework was most predictive of overall score (i.e. highest correlation with average grade score

```{r}
#make NAs to zero
mask= gradebook
mask[is.na(mask)]=0
```

Use `cor()` function fir correlation analysis

```{r}
cor(mask$hw5,mean_grades)
cor(mask$hw3,mean_grades)
```

Use `apply()` function to run this analysis ocer the whole course.

```{r}
apply(mask, 2, cor, mean_grades )
```
